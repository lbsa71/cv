<html>
  <head>
    <title>CV Data Upload</title>
  </head>
  <body>
    <h1>Upload and Process CV Data</h1>
    <div>
      <label for="zipInput">CV Data (ZIP):</label>
      <input type="file" accept=".zip" id="zipInput" />
    </div>
    <div>
      <label for="jsonInput">Position Skills Map (JSON):</label>
      <input type="file" accept=".json" id="jsonInput" />
    </div>
    <button onclick="handleFileUploadAndProcess()">Start</button>

    <script>
      import { generateCV } from '../services/pdf/pdfGenerator';
      import { parseCSV, transformData } from '../services/data/transformationService';
      import JSZip from 'jszip';
      import type { RawData, PositionSkillMapping } from '../models/types';

      // Declare window interface
      declare global {
        interface Window {
          handleFileUploadAndProcess: () => Promise<void>;
        }
      }

      // Function to handle file upload and processing
      async function handleFileUploadAndProcess() {
        console.log('Handling file upload');
        const zipInput = document.getElementById('zipInput') as HTMLInputElement;
        const jsonInput = document.getElementById('jsonInput') as HTMLInputElement;
        const zipFile = zipInput.files[0];
        const jsonFile = jsonInput.files[0];

        if (!zipFile) {
          console.error('No ZIP file selected');
          return;
        }

        try {
          // Process ZIP file
          const zip = new JSZip();
          const zipContent = await zip.loadAsync(zipFile);
          const rawData: RawData = {};

          for (const fileName of Object.keys(zipContent.files)) {
            console.log('Processing file:', fileName);
            if (fileName.endsWith('.csv')) {
              const fileData = await zipContent.files[fileName].async('text');
              const baseName = fileName.split('/').pop(); // Remove any directory path
              rawData[baseName] = parseCSV(fileData);
            } else if (fileName.endsWith('.jpg') || fileName.endsWith('.png')) {
              const imageData = await zipContent.files[fileName].async('base64');
              rawData.image = `data:image/jpeg;base64,${imageData}`;
            }
          }

          // Process JSON file if provided
          let positionSkillsMap: PositionSkillMapping = {};
          if (jsonFile) {
            const jsonContent = await jsonFile.text();
            positionSkillsMap = JSON.parse(jsonContent);
          }

          console.log('Raw data processed:', rawData);
          const transformedData = transformData(rawData, positionSkillsMap);
          console.log('Transformed data:', transformedData);
          
          await generateCV(transformedData, positionSkillsMap);
        } catch (error) {
          console.error('Error processing data:', error);
        }
      }

      // Make the function available to the onclick handler
      window.handleFileUploadAndProcess = handleFileUploadAndProcess;
    </script>
  </body>
</html>
